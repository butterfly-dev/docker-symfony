version: 2

jobs:
  build:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: true
      - run:
          name: Login DockerHub
          command: |
            docker login --username ${DOCKER_HUB_LOGIN} --password ${DOCKER_HUB_PASSWORD}
      - run:
          name: Build image docker
          command: |
            cd docker/php
            docker build --cache-from=butterflydev/docker-symfony:latest -t butterflydev/docker-symfony .
      - run:
          name: Push image docker
          command: |
            docker push butterflydev/docker-symfony

  test:
    docker:
      - image: butterflydev/docker-symfony
        environment:
          SYMFONY_ENV: test
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: true
      - run:
          name: Install dependencies
          command: |
            set -o allexport
            source <(sed 's/\$/\\\$/g' .env)
            set +o allexport
            composer install -n
      - run:
          name: Run test
          command: |
            set -o allexport
            source <(sed 's/\$/\\\$/g' .env)
            set +o allexport
            vendor/bin/simple-phpunit --coverage-text --colors=never

  lint:
    docker:
      - image: butterflydev/docker-symfony
        environment:
          SYMFONY_ENV: test
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: true
      - run:
          name: Install dependencies
          command: |
            set -o allexport
            source <(sed 's/\$/\\\$/g' .env)
            set +o allexport
            composer install -n
      - run:
          name: Run lint
          command: |
            set -o allexport
            source <(sed 's/\$/\\\$/g' .env)
            set +o allexport
            find src -name '*.php' -exec php -l {} \; || EXIT_STATUS=$?
            vendor/bin/phpcs --standard=phpcs.xml --extensions=php --ignore='var/,vendor/,app/AppKernel.php' src || EXIT_STATUS=$?
            vendor/bin/phpmd src/ text phpmd.xml --exclude 'tests/,var/,vendor/' --suffixes php || EXIT_STATUS=$?
            vendor/bin/phpcpd src/ || EXIT_STATUS=$?
            exit $EXIT_STATUS

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build