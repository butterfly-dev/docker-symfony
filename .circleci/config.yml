version: 2

jobs:
#  build:
#    docker:
#      - image: docker:17.05.0-ce-git
#    steps:
#      - checkout
#      - setup_remote_docker:
#          reusable: true
#          exclusive: true
#      - run:
#          name: Login DockerHub
#          command: |
#            docker login --username ${DOCKER_HUB_LOGIN} --password ${DOCKER_HUB_PASSWORD}
#      - run:
#          name: Build image docker
#          command: |
#            cd docker/php
#            docker build --cache-from=butterflydev/docker-symfony:latest -t butterflydev/docker-symfony .
#      - run:
#          name: Push image docker
#          command: |
#            docker push butterflydev/docker-symfony
#
#  test:
#    docker:
#      - image: butterflydev/docker-symfony
#        environment:
#          SYMFONY_ENV: test
#    steps:
#      - checkout
#      - setup_remote_docker:
#          reusable: true
#          exclusive: true
#      - run:
#          name: Install dependencies
#          command: |
#            set -o allexport
#            source <(sed 's/\$/\\\$/g' .env)
#            set +o allexport
#            composer install -n
#      - run:
#          name: Run test
#          command: |
#            set -o allexport
#            source <(sed 's/\$/\\\$/g' .env)
#            set +o allexport
#            vendor/bin/simple-phpunit --coverage-text --colors=never
#
#  lint:
#    docker:
#      - image: butterflydev/docker-symfony
#        environment:
#          SYMFONY_ENV: test
#    steps:
#      - checkout
#      - setup_remote_docker:
#          reusable: true
#          exclusive: true
#      - run:
#          name: Install dependencies
#          command: |
#            set -o allexport
#            source <(sed 's/\$/\\\$/g' .env)
#            set +o allexport
#            composer install -n
#      - run:
#          name: Run lint
#          command: |
#            set -o allexport
#            source <(sed 's/\$/\\\$/g' .env)
#            set +o allexport
#            find src -name '*.php' -exec php -l {} \; || EXIT_STATUS=$?
#            vendor/bin/phpcs --standard=phpcs.xml --extensions=php --ignore='var/,vendor/,app/AppKernel.php' src || EXIT_STATUS=$?
#            vendor/bin/phpmd src/ text phpmd.xml --exclude 'tests/,var/,vendor/' --suffixes php || EXIT_STATUS=$?
#            vendor/bin/phpcpd src/ || EXIT_STATUS=$?
#            exit $EXIT_STATUS

  deploy:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run:
          name: Install lsb-release, gnupg, curl and python
          command: |
            apt update
            apt install -y lsb-release gnupg curl python
      - run:
          name: Install GCloud
          command: |
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
            apt-get update && apt-get install -y kubectl google-cloud-sdk
      - run:
          name: Init Gcloud
          command: |
            gcloud auth activate-service-account --key-file=credential_key.json
            gcloud config set project memoire-180218
      - run:
          name: Deploy
          command: |
            gcloud compute ssh nicolas@app --command "cd docker-symfony && make run"
            gcloud compute ssh nicolas@app --command "cd docker-symfony && bin/app.sh composer install -n"
            gcloud compute ssh nicolas@app --command "cd docker-symfony && bin/deploy/clean.sh"

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
#      - build
#      - test:
#          requires:
#            - build
#      - lint:
#          requires:
#            - build
      - deploy
#          requires:
#            - test